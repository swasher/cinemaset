---
- hosts: all
  gather_facts: yes
  vars_files:
    - group_vars/all.yml
    - group_vars/vault.yml

  tasks:

  - name: super user existed?
    command: echo "from django.contrib.auth import get_user_model; User = get_user_model(); print(User.objects.filter(email='{{superusername}}').count()>0)" | {{virtualenv}}/bin/python ./manage.py shell
    args:
      chdir: "{{project_root}}"
    environment:
      DJANGO_SETTINGS_MODULE: "{{settings}}"
    register: superuser_existed


  - name: Create super user [with email as username]
    # This suit when we change User model with USERNAME_FIELD = 'email'
    # For usual User add `--username={{superusername}}`
    django_manage: command="createsuperuser --noinput --email={{superuseremail}}"
                   app_path={{project_root}}
                   virtualenv={{virtualenv}}
                   settings={{settings}}
    when: not superuser_existed

  - name: Install expect
    apt:
      pkg: "{{item}}"
      state: installed
      update-cache: yes
    with_items:
      - expect
    become: yes

#  - name: Change password tricks
#    template: src=changepassword.sh.j2 dest={{project_root}}/changepassword.sh mode=0755

  - name: Change password tricks
    # you change permission for script in vagrant share folder, so let's use /tmp
    blockinfile:
      path: "/tmp/changepassword.sh"
      block: |
        #!/usr/bin/expect
        set timeout -1;
        spawn {{virtualenv}}/bin/python manage.py changepassword {{superusername}};
        expect {
            "Password:" { exp_send "{{superuserpassword}}\r" ; exp_continue }
            "Password (again):" { exp_send "{{superuserpassword}}\r" ; exp_continue }
            eof
        }
      create: yes
      mode: 0755

  - name: Change password
    command: "expect /tmp/changepassword.sh"
    args:
      chdir: "{{project_root}}"
    environment:
      DJANGO_SETTINGS_MODULE: "{{settings}}"


  - name: remove changepassword.sh
    file:
      path: "/tmp/changepassword.sh"
      state: absent